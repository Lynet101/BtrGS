"""
Sebastian Lindau-Skands, @lynet_101 | Â©2022
Fully featured hybrid graphics support for linux

Endgoal:
    Special features:
    POi = prime offload in integrated mode |  Allows user to temporarily power on dGPU to run a specific program, and automatiCALLy power it down again, once program has finished | Finished | Not tested
    EDi = External display in integrated | Allows dGPU to temporarily power on, when external display attached, and automatiCALLy power down when display detached | Not implemented
    auto_offload = AutomatiCALLy determines what apps should utilise prime-offload, and does so accordingly | Not implemented
"""
import subprocess
import threading
import time

#temp var
CALL=subprocess.check_output
DECIRED = CALL('cat /var/fun/decired.mode')
CURRENT = CALL('cat /var/fun/current.mode')
D_PCI1 = "0000:01:00.0"
D_PCI2 = "0000:01:00.1"
DM = 'lightdm'
APP = Null
POi = 1
auto_offload_enabled = 1
EDi = 1

class POI():
    #Done | Not tested
    def start():
        try:
            if CALL('cat /var/BtrHGS/current.mode') == 'integrated':
                app=input('program to launch: ')
                i2h()
                thread = threading.Thread(target=(CALL(f'prime-run {app}', shell=True)))
                thread.start()
                check(app)
            else:
                print('This feature is only available when running in integrated')
        except:
            print('failed to read current state')


    #Done | Not tested
    def check(app):
        while running == True:
            time.sleep(1)
            try:
                app_pid=CALL(f'pidof {app}', shell=True)
                print(f'app running with pid {app_pid}')
            except:
                print('app not running')
                try:
                    CALL("lsof /dev/nvidia* | awk '{print $2}' | xargs -I {} kill {}", shell=True) #procceses with more than one thread are... weird
                    if CALL("lsof /dev/nvidia* ") == "":
                        h2i()
                        running = False
                    else:
                        print('failed to kill remaining processes.... Aborting!')
                        running = False
                except:
                    print('no processes found... continuing')
                    h2i()
                    running = False

class ext_disp():
    if CURRENT == 'off':
        if EDi == 1:
            switch.i2h()
            #wait for ext_disp to disconnect
            switch.h2i()
        else:
            print("External Displays in integrated are disabled. To enable go to /etc/fun/config and set 'dDisp-in-iM' to 1")
    if CURRENT == 'hybrid':
        #magic mumbo jumbo
        print('placeholder')

class switch():
    #Done | Not tested
    def switch_main(self):

        DECIRED = CALL('cat /var/BtrHGS/decired.mode')
        CURRENT = CALL('cat /var/BtrHGS/current.mode')

        if DECIRED == 'off':
            if CURRENT == 'on':
                self.d2i()
            
            if CURRENT == 'off':
                print("dGPU already off, won't proceed")
            
            if CURRENT == 'hybrid':
                self.h2i()
            
            else:
                print('CURRENT graphics mode unknown...')
        
        if DECIRED == 'on':
            if CURRENT == 'off':
                self.i2d()
            
            if CURRENT == 'on':
                print("dGPU already on, won't proceed")
            
            if CURRENT == 'hybrid':
                self.h2d()
            
            else:
                print('CURRENT graphics mode unknown...')
        
        if DECIRED == 'hybrid':
            if CURRENT == 'on':
                self.d2h()
            
            if CURRENT == 'hybrid':
                print("Already Hybrid, won't proceed")
            
            if CURRENT == 'off':
                self.i2h()
            else:
                print('CURRENT graphics mode unknown...')

    """
    d2i | Dedicated to integrated
    i2d | Integrated to dedicated
    h2i | Hybrid to integrated
    h2d | Hybrid to dedicated
    d2h | Dedicated to hybrid
    i2h | Integrated to hybrid
    """

    #Done | Not tested
    def d2i():
        try:
            stopdm
            try:
                if CALL('lsof /dev/nvidia*') != "":
                    kill_choice=input('processes are still running on dGPU... Disabling it will kill theese processes\ndo you want to proceed(y/n)?\n')
                    if kill_choice == 'y':
                        try:
                            kill
                            remove1
                            remove2
                            unload_driver   
                        except:
                            print('failed to kill processes, and unload dGPU')
                            return
                    elif kill_choice == 'n':
                        print('please manually close the programs listed below, before continuing:')
                        print(CALL('lsof /dev/nvidia*'))
                        return
                    else:
                        print('unrecognised option!')
                else:
                    print('no processes are running... continuing')
                    remove1
                    remove2
                    unload_driver
            except:
                print('Error when trying to get running processes\nAborting!')
                return
            inteX
            startdm
        except:
            print('failed to switch')

    #Done | Seemless | Not tested
    def h2i():
        try:
            if CALL('lsof /dev/nvidia*') != "":
                kill_choice=input('processes are still running on dGPU... Disabling it will kill theese processes\ndo you want to proceed(y/n)?\n')
                if kill_choice == 'y':
                    try:
                        kill
                        remove1
                        remove2
                        unload_driver   
                    except:
                        print('failed to kill processes, and unload dGPU')
                        return
                elif kill_choice == 'n':
                    print('please manually close the programs listed below, before continuing:')
                    print(CALL('lsof /dev/nvidia*'))
                    return
                else:
                    print('unrecognised option!')
            else:
                print('no processes are running... continuing')
                remove1
                remove2
                unload_driver
        except:
            print('Error when trying to get running processes\nAborting!')
            return

    #Done | Not tested
    def i2d():
        try:
            stopdm
            attach
            if CALL('lsmod | grep nvi') != "":
                print('drivers already loaded!')
            else:
                load_driver
            dediX
            startdm
        except:
            print('failed to switch')
            return

    #Done | Not tested
    def h2d():
        try:
            stopdm
            dediX
            startdm
        except:
            print('failed to switch')
            return

    #Done | Not tested
    def d2h():
        try:
            stopdm
            inteX
            startdm
        except:
            print('failed to switch')
            return

    #Done | Seemless | Not tested
    def i2h():
        try:
            attach
            if CALL('lsmod | grep nvi') != "":
                print('drivers already loaded!')
            else:
                load_driver
        except:
            print('failed to load dGPU')
            return
    
class auto_offload():
    if auto_offload_enabled == 1:
        """
        If current mode is hybrid, heavy applications should be launched with 'prime-run' automatiCALLy
        """